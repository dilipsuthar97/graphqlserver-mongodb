{"version":3,"sources":["../../src/config/middlewares.js"],"names":["auth","req","res","next","headers","authorization","accesskey","console","log","user","app","use","bodyParser","json","server","ApolloServer","typeDefs","resolvers","context","applyMiddleware","send"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;;;;;;;AAEA;AACA,IAAMA,IAAI;AAAA,qEAAG,iBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAEgCF,GAAG,CAACG,OAFpC,EAEGC,aAFH,gBAEGA,aAFH,EAEkBC,SAFlB,gBAEkBA,SAFlB;AAGLC,YAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCH,aAArC,EAAoD,qBAApD,EAA2EC,SAA3E;;AAHK,kBAKDA,SAAS,IAAI,IALZ;AAAA;AAAA;AAAA;;AAAA,kBAMGD,aAAa,IAAI,IANpB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAOsB,uBAAYA,aAAZ,CAPtB;;AAAA;AAOSI,YAAAA,IAPT;AAQGR,YAAAA,GAAG,CAACD,IAAJ,GAAW;AACPS,cAAAA,IAAI,EAAEA,IADC;AAEPH,cAAAA,SAAS,EAAEA;AAFJ,aAAX;AARH;AAAA;;AAAA;AAaGL,YAAAA,GAAG,CAACD,IAAJ,GAAW;AACPS,cAAAA,IAAI,EAAE,IADC;AAEPH,cAAAA,SAAS,EAAEA;AAFJ,aAAX;;AAbH;AAAA;AAAA;;AAAA;AAmBDL,YAAAA,GAAG,CAACD,IAAJ,GAAW,IAAX;;AAnBC;AAAA,6CAsBEG,IAAI,EAtBN;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAJH,IAAI;AAAA;AAAA;AAAA,GAAV;;eA4Be,kBAACU,GAAD,EAAS;AACpBA,EAAAA,GAAG,CAACC,GAAJ,CAAQC,uBAAWC,IAAX,EAAR,EADoB,CACQ;;AAC5BH,EAAAA,GAAG,CAACC,GAAJ,CAAQX,IAAR,EAFoB,CAEJ;;AAEhB,MAAMc,MAAM,GAAG,IAAIC,iCAAJ,CAAiB;AAAI;AAChCC,IAAAA,QAAQ,EAARA,kBAD4B;AAE5BC,IAAAA,SAAS,EAATA,qBAF4B;AAG5BC,IAAAA,OAAO,EAAE;AAAA,UAAGjB,GAAH,SAAGA,GAAH;AAAA,UAAQC,GAAR,SAAQA,GAAR;AAAA,aAAmB;AACxBF,QAAAA,IAAI,EAAEC,GAAG,CAACD;AADc,OAAnB;AAAA;AAHmB,GAAjB,CAAf;AAOAc,EAAAA,MAAM,CAACK,eAAP,CAAuB;AAAET,IAAAA,GAAG,EAAHA;AAAF,GAAvB,EAXoB,CAWa;;AAEjCA,EAAAA,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAa,UAACV,GAAD,EAAMC,GAAN;AAAA,WAAcA,GAAG,CAACkB,IAAJ,CAAS,kCAAT,CAAd;AAAA,GAAb;AAEA,SAAON,MAAP;AACH,C","sourcesContent":["import bodyParser from 'body-parser';\nimport { ApolloServer } from 'apollo-server-express';\n\nimport typeDefs from '../graphql/schema';\nimport resolvers from '../graphql/resolvers';\nimport { decodeToken } from '../services/auth';\n\n// This is a auth middleware\nconst auth = async (req, res, next) => {\n    try {\n        const { authorization, accesskey } = req.headers;\n        console.log('----- Authorization: ', authorization, '\\n----- AccessKey: ', accesskey);\n\n        if (accesskey != null) {\n            if (authorization != null) {\n                const user = await decodeToken(authorization);\n                req.auth = {\n                    user: user,\n                    accesskey: accesskey\n                };\n            } else {\n                req.auth = {\n                    user: null,\n                    accesskey: accesskey,\n                }\n            }\n        } else {\n            req.auth = null;\n        }\n\n        return next();\n    } catch (err) {\n        throw err\n    }\n}\n\nexport default (app) => {\n    app.use(bodyParser.json()); // add body-parser as the json parser middleware\n    app.use(auth);  // auth middleware\n\n    const server = new ApolloServer({   // apollo server setup instance\n        typeDefs,\n        resolvers,\n        context: ({ req, res }) => ({\n            auth: req.auth,\n        }),\n    });\n    server.applyMiddleware({ app }); // apollo server connection\n\n    app.use('/', (req, res) => res.send('Welcome to the GraphQL server :)'));\n    \n    return server;\n}"],"file":"middlewares.js"}